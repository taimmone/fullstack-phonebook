{"version":3,"sources":["services/phonebookService.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","phonebookService","getAll","axios","get","then","data","create","newObject","post","remove","id","delete","Filter","filter","handleInput","name","value","onChange","PersonForm","newPerson","addPerson","onSubmit","number","type","Person","person","handleClick","onClick","Persons","persons","deletePerson","toLowerCase","includes","map","Notification","message","error","className","App","useState","setPersons","setNewPerson","setFilter","notification","setNotification","useEffect","event","target","preventDefault","existingPerson","find","window","alert","createdPerson","setTimeout","createNotification","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.689fe720.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst phonebookService = {\n  getAll: () => axios.get(baseUrl).then(({ data }) => data),\n  create: newObject => axios.post(baseUrl, newObject).then(({ data }) => data),\n  // TODO: Requires backend functionality for updating persons\n  // update: (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject).then(({ data }) => data),\n  remove: id => axios.delete(`${baseUrl}/${id}`).then(({ data }) => data),\n};\n\nexport default phonebookService;\n","const Filter = ({ filter, handleInput }) => {\n  return <input name=\"filter\" value={filter} onChange={handleInput} />;\n};\n\nexport default Filter;\n","const PersonForm = ({ newPerson, addPerson, handleInput }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input name=\"name\" value={newPerson.name} onChange={handleInput} />\n      </div>\n      <div>\n        number: <input name=\"number\" value={newPerson.number} onChange={handleInput} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","const Person = ({ person: { name, number }, handleClick }) => (\n  <li>\n    <span>\n      {name} {number}\n    </span>\n    <button onClick={handleClick}>delete</button>\n  </li>\n);\n\nexport default Person;\n","import Person from './Person';\n\nconst Persons = ({ persons, filter, deletePerson }) => {\n  function filterPersons() {\n    return persons.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n  }\n\n  const listPersons = () =>\n    filterPersons(persons).map(person => (\n      <Person key={person.id} person={person} handleClick={() => deletePerson(person.id)} />\n    ));\n  return <ul>{listPersons()}</ul>;\n};\n\nexport default Persons;\n","const Notification = ({ message, error = false }) => (\n  <div className={`notification${error ? ' error' : ''}`}>{message}</div>\n);\nexport default Notification;\n","import React, { useEffect, useState } from 'react';\n\nimport phonebookService from './services/phonebookService';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState({ name: '', number: '' });\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    phonebookService.getAll().then(data => setPersons(data));\n  }, []);\n\n  const createNotification = (message, error = false) => {\n    setNotification({ message, error });\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const existingPerson = persons.find(({ name }) => name === newPerson.name);\n\n    if (existingPerson && existingPerson.number !== newPerson.number) {\n      window.alert(`${newPerson.name} is already added to phonebook`);\n      // TODO: Requires backend functionality for updating persons\n      // window.confirm(\n      //   `${newPerson.name} is already added to phonebook, replace the old number with a new one?`\n      // ) &&\n      //   phonebookService\n      //     .update(existingPerson.id, newPerson)\n      //     .then(updatedPerson => {\n      //       setPersons(\n      //         persons.map(person => (person.id !== existingPerson.id ? person : updatedPerson))\n      //       );\n      //       createNotification(`Updated ${newPerson.name}`);\n      //     })\n      //     .catch(err => {\n      //       createNotification(\n      //         `Information of ${newPerson.name} has already been removed from server`,\n      //         true\n      //       );\n      //       setPersons(persons.filter(person => person.id !== existingPerson.id));;\n      //     });\n    } else {\n      phonebookService.create(newPerson).then(createdPerson => {\n        setPersons([...persons, createdPerson]);\n        createNotification(`Added ${newPerson.name}`);\n      });\n    }\n\n    setNewPerson({ name: '', number: '' });\n  };\n\n  const deletePerson = id => {\n    if (window.confirm(`Delete ${persons.find(person => person.id === id)?.name}?`))\n      phonebookService.remove(id).then(setPersons(persons.filter(person => person.id !== id)));\n  };\n\n  const handleFilterInput = event => setFilter(event.target.value);\n  const handlePersonInput = ({ target: { name, value } }) =>\n    setNewPerson({ ...newPerson, [name]: value });\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {notification && <Notification message={notification?.message} error={notification?.error} />}\n      <h2>Filter numbers</h2>\n      <Filter filter={filter} handleInput={handleFilterInput} />\n      <h2>Add a new</h2>\n      <PersonForm newPerson={newPerson} handleInput={handlePersonInput} addPerson={addPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}